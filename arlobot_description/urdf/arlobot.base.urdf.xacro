<?xml version="1.0"?>

<robot name="base" xmlns:xacro="http://ros.org/wiki/xacro">

    <!-- base_footprint is a fictitious link(frame) that is on the ground
         right below base_link origin, navigation stack depends on this frame -->

    <!-- The base xacro macro -->
    <xacro:macro name="base" params="color">
        <link name="base_footprint">
            <visual>
              <origin xyz="0 0 0" rpy="0 0 0" />
              <geometry>
                  <box size="0.05 0.05 0.001" />
              </geometry>
              <material name="TransparentGreen" />
            </visual>
        </link>

        <link name="base_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="${base_size_x} ${base_size_y} ${base_size_z}" />
                </geometry>
                <material name="${color}" />
          </visual>
          <collision>
              <origin xyz="0 0 0" rpy="0 0 0" />
              <geometry>
                  <box size="${base_size_x} ${base_size_y} ${base_size_z}" />
              </geometry>
            </collision>
        </link>

        <joint name="base_joint" type="fixed">
            <!-- Note: The wheels extend radius - z offset below the battery box so we must offset the base_joint by that same
            amount in order for the robot to reset at 0 offset on the Z axis
            -->
            <origin xyz="0 0 ${base_offset_z}" rpy="0 0 0" />
            <parent link="base_footprint"/>
            <child link="base_link" />
        </joint>
    </xacro:macro>

    <xacro:macro name="wheel" params="parent suffix reflect color">
        <!-- Note: type is fixed.  continuous is possible but then joint_states would need to be published.  For
        visualization its not particularly necessary to have the wheels turn.  Maybe in Gazebo simulation it will be
        required.  If that is the case, then of course something in Arlobot mobile base will need to publish the
        joint_states.
         -->
        <joint name="${parent}_${suffix}_wheel_joint" type="fixed">
            <parent link="${parent}_link"/>
            <child link="${suffix}_wheel_link"/>
            <origin xyz="${wheel_offset_x} ${reflect*wheel_offset_y} ${wheel_offset_z}" rpy="${reflect*PI/2} 0 0" />
            <limit effort="0.1" velocity="0.01"/>
            <axis xyz="0 0 1" />
        </joint>

        <link name="${suffix}_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
                </geometry>
                <material name="${color}" />
            </visual>
        </link>

    </xacro:macro>

    <wheel parent="base" suffix="left" reflect="1" color="Orange"/>
    <wheel parent="base" suffix="right" reflect="-1" color="Orange"/>

</robot>